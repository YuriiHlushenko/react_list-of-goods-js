{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortBy","setSortBy","isReversed","setIsReversed","visibleGoods","goods","REVERSED","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","onClick","map","good","lastIndexOf","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SAsBhB,IAAMC,EAAM,WACjB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAvBR,SAA0BC,EAAOL,EAAQM,GACvC,IAAIC,EAAa,YAAOF,GAgBxB,OAdIL,GACFO,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAIV,IAAWJ,EACNa,EAAME,cAAcD,GAGtBD,EAAMG,OAASF,EAAME,UAI5BN,IACFC,EAAgBA,EAAcM,WAGzBN,EAMcO,CAAiBnB,EAAiBK,EAAQE,GAE/D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMhB,EAAUL,IACzBmB,UAAWf,IAAWJ,EAClB,iBACA,0BALN,iCAWA,wBACEoB,KAAK,SACLC,QAAS,kBAAMhB,EAAUJ,IACzBkB,UAAWf,IAAWH,EAClB,iBACA,0BALN,4BAWA,wBACEmB,KAAK,SACLD,UAAWb,EACP,oBACA,6BAEJe,QAAS,kBACLd,GADYD,IANlB,qBAaCF,GAAUE,EAEP,wBACEc,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPhB,EAAU,IACVE,GAAc,IALlB,mBAWA,QAIN,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAyDA,GAAjCf,EAAagB,YAAYD,aCnG3DE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d0888129.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, sortBy, REVERSED) {\n  let preparedGoods = [...goods];\n\n  if (sortBy) {\n    preparedGoods.sort((good1, good2) => {\n      if (sortBy === SORT_BY_ALPHABET) {\n        return good1.localeCompare(good2);\n      }\n\n      return good1.length - good2.length;\n    });\n  }\n\n  if (REVERSED) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortBy, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortBy(SORT_BY_ALPHABET)}\n          className={sortBy === SORT_BY_ALPHABET\n            ? 'button is-info'\n            : 'button is-info is-light'\n          }\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortBy(SORT_BY_LENGTH)}\n          className={sortBy === SORT_BY_LENGTH\n            ? 'button is-info'\n            : 'button is-info is-light'\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={isReversed\n            ? 'button is-warning'\n            : 'button is-warning is-light'\n          }\n          onClick={() => (isReversed\n            ? setIsReversed(false)\n            : setIsReversed(true))}\n        >\n          Reverse\n        </button>\n\n        {sortBy || isReversed\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortBy('');\n                setIsReversed(false);\n              }}\n            >\n              Reset\n            </button>\n          )\n          : null\n        }\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={visibleGoods.lastIndexOf(good)}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}